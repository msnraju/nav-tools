import { PropertyType } from './property-type';
import IBaseClass, { BaseClass } from '../models/base-class';

export interface IPropertyMap {
  name: string;
  type: PropertyType;
}

export interface IProperty extends IBaseClass {
  name: string;
  type: PropertyType;
  value: any;
}

export class Property<T> extends BaseClass implements IProperty {
  name: string;
  value: T;
  type: PropertyType;

  constructor(name: string, type: PropertyType, value: T) {
    super(`Property`);
    this.name = name;
    this.value = value;
    this.type = type;
  }
}

export default class PropertyMap {
  static objectProperties: Array<IPropertyMap> = [
    { name: 'Date', type: PropertyType.Text },
    { name: 'Time', type: PropertyType.Text },
    { name: 'Version List', type: PropertyType.Text },
    { name: 'Modified', type: PropertyType.Text },
  ];

  static tableProperties: Array<IPropertyMap> = [
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'Description', type: PropertyType.Text },
    { name: 'DataPerCompany', type: PropertyType.Boolean },
    { name: 'Permissions', type: PropertyType.Permissions },
    { name: 'LookupPageID', type: PropertyType.Text },
    { name: 'DrillDownPageID', type: PropertyType.Text },
    { name: 'DataCaptionFields', type: PropertyType.FieldList },
    { name: 'PasteIsValid', type: PropertyType.Boolean },
    { name: 'LinkedObject', type: PropertyType.Boolean },
    { name: 'TableType', type: PropertyType.Option },
    { name: 'DataClassification', type: PropertyType.Option },
    { name: 'ExternalName', type: PropertyType.Text },
    { name: 'ObsoleteState', type: PropertyType.Option },
    { name: 'ObsoleteReason', type: PropertyType.Text },
    { name: 'ReplicateData', type: PropertyType.Boolean },

    { name: 'OnInsert', type: PropertyType.Trigger },
    { name: 'OnModify', type: PropertyType.Trigger },
    { name: 'OnDelete', type: PropertyType.Trigger },
    { name: 'OnRename', type: PropertyType.Trigger },
  ];

  static tableField: Array<IPropertyMap> = [
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'Description', type: PropertyType.Text },
    { name: 'InitValue', type: PropertyType.Text },
    { name: 'FieldClass', type: PropertyType.Option },
    { name: 'CalcFormula', type: PropertyType.CalcFormula },
    { name: 'DecimalPlaces', type: PropertyType.Text },
    { name: 'OptionString', type: PropertyType.Text },
    { name: 'OptionCaptionML', type: PropertyType.TextML },
    { name: 'BlankNumbers', type: PropertyType.Option },
    { name: 'BlankZero', type: PropertyType.Boolean },
    { name: 'SignDisplacement', type: PropertyType.Text },
    { name: 'AutoFormatType', type: PropertyType.Integer },
    { name: 'AutoFormatExpr', type: PropertyType.Text },
    { name: 'CaptionClass', type: PropertyType.Text },
    { name: 'Editable', type: PropertyType.Boolean },
    { name: 'MinValue', type: PropertyType.Integer },
    { name: 'MaxValue', type: PropertyType.Integer },
    { name: 'NotBlank', type: PropertyType.Boolean },
    { name: 'ClosingDates', type: PropertyType.Boolean },
    { name: 'Numeric', type: PropertyType.Boolean },
    { name: 'CharAllowed', type: PropertyType.Text },
    { name: 'DateFormula', type: PropertyType.Boolean },
    { name: 'ValuesAllowed', type: PropertyType.Text },
    { name: 'AutoIncrement', type: PropertyType.Boolean },
    { name: 'SQL Data Type', type: PropertyType.Text },
    { name: 'TableRelation', type: PropertyType.TableRelation },
    { name: 'ValidateTableRelation', type: PropertyType.Boolean },
    { name: 'TestTableRelation', type: PropertyType.Boolean },
    { name: 'SubType', type: PropertyType.Text },
    { name: 'Owner', type: PropertyType.Text },
    { name: 'Compressed', type: PropertyType.Boolean },
    { name: 'AccessByPermission', type: PropertyType.Permission },
    { name: 'ExtendedDatatype', type: PropertyType.Option },
    { name: 'Width', type: PropertyType.Integer },
    { name: 'DataClassification', type: PropertyType.Text },
    { name: 'AltSearchField', type: PropertyType.Text },
    { name: 'TableIDExpr', type: PropertyType.Text },
    { name: 'Volatile', type: PropertyType.Boolean },
    { name: 'ExternalName', type: PropertyType.Text },
    { name: 'ExternalType', type: PropertyType.Text },
    { name: 'ExternalAccess', type: PropertyType.Text },
    { name: 'OptionOrdinalValues', type: PropertyType.Text },
    { name: 'ObsoleteState', type: PropertyType.Option },
    { name: 'ObsoleteReason', type: PropertyType.Text },

    { name: 'OnValidate', type: PropertyType.Trigger },
    { name: 'OnLookup', type: PropertyType.Trigger },
  ];

  static tableKey: Array<IPropertyMap> = [
    { name: 'Clustered', type: PropertyType.Boolean },
    { name: 'SumIndexFields', type: PropertyType.FieldList },
    { name: 'MaintainSQLIndex', type: PropertyType.Boolean },
    { name: 'MaintainSIFTIndex', type: PropertyType.Boolean },
    { name: 'SQLIndex', type: PropertyType.FieldList },
    { name: 'ObsoleteState', type: PropertyType.Option },
    { name: 'ObsoleteReason', type: PropertyType.Text },
    { name: 'KeyGroups', type: PropertyType.Text },
  ];

  static reportProperties: Array<IPropertyMap> = [
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'UsageCategory', type: PropertyType.Option },
    { name: 'ApplicationArea', type: PropertyType.Text },
    { name: 'Description', type: PropertyType.Text },
    { name: 'UseRequestPage', type: PropertyType.Boolean },
    { name: 'UseSystemPrinter', type: PropertyType.Boolean },
    { name: 'EnableExternalImages', type: PropertyType.Boolean },
    { name: 'EnableHyperlinks', type: PropertyType.Boolean },
    { name: 'EnableExternalAssemblies', type: PropertyType.Boolean },
    { name: 'ProcessingOnly', type: PropertyType.Boolean },
    { name: 'ShowPrintStatus', type: PropertyType.Boolean },
    { name: 'TransactionType', type: PropertyType.Option },
    { name: 'Permissions', type: PropertyType.Permissions },
    { name: 'PaperSourceFirstPage', type: PropertyType.Option },
    { name: 'PaperSourceDefaultPage', type: PropertyType.Option },
    { name: 'PaperSourceLastPage', type: PropertyType.Option },
    { name: 'PreviewMode', type: PropertyType.Option },
    { name: 'DefaultLayout', type: PropertyType.Option },
    { name: 'WordMergeDataItem', type: PropertyType.Text },
    { name: 'PDFFontEmbedding', type: PropertyType.Option },
    { name: 'AdditionalSearchTermsML', type: PropertyType.TextML },
    { name: 'AccessByPermission', type: PropertyType.Permission },

    { name: 'OnInitReport', type: PropertyType.Trigger },
    { name: 'OnPreReport', type: PropertyType.Trigger },
    { name: 'OnPostReport', type: PropertyType.Trigger },
  ];

  static reportDataItem: Array<IPropertyMap> = [
    { name: 'DataItemTable', type: PropertyType.Text },
    { name: 'DataItemTableView', type: PropertyType.TableView },
    { name: 'DataItemLinkReference', type: PropertyType.Text },
    { name: 'DataItemLink', type: PropertyType.TableFilter },
    { name: 'ReqFilterHeadingML', type: PropertyType.TextML },
    { name: 'ReqFilterFields', type: PropertyType.FieldList },
    { name: 'CalcFields', type: PropertyType.FieldList },
    { name: 'MaxIteration', type: PropertyType.Integer },
    { name: 'PrintOnlyIfDetail', type: PropertyType.Boolean },
    { name: 'Temporary', type: PropertyType.Boolean },

    { name: 'OptionString', type: PropertyType.Text },
    { name: 'OptionCaptionML', type: PropertyType.TextML },
    { name: 'DecimalPlaces', type: PropertyType.Text },
    { name: 'AutoFormatType', type: PropertyType.Text },
    { name: 'AutoFormatExpr', type: PropertyType.Text },
    { name: 'SourceExpr', type: PropertyType.Text },
    { name: 'AutoCalcField', type: PropertyType.Boolean },
    { name: 'IncludeCaption', type: PropertyType.Boolean },

    { name: 'OnPreDataItem', type: PropertyType.Trigger },
    { name: 'OnAfterGetRecord', type: PropertyType.Trigger },
    { name: 'OnPostDataItem', type: PropertyType.Trigger },
  ];

  static reportLabel: Array<IPropertyMap> = [
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'Description', type: PropertyType.Text },
  ];

  static pageProperties: Array<IPropertyMap> = [
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'UsageCategory', type: PropertyType.Option },
    { name: 'QueryCategory', type: PropertyType.Text },
    { name: 'ApplicationArea', type: PropertyType.Text },
    { name: 'AccessByPermission', type: PropertyType.Permission },
    { name: 'Editable', type: PropertyType.Boolean },
    { name: 'Description', type: PropertyType.Text },
    { name: 'Permissions', type: PropertyType.Permissions },
    { name: 'AdditionalSearchTermsML', type: PropertyType.TextML },
    { name: 'PageType', type: PropertyType.Option },
    { name: 'InstructionalTextML', type: PropertyType.TextML },
    { name: 'CardPageID', type: PropertyType.Text },
    { name: 'DataCaptionExpr', type: PropertyType.Text },
    { name: 'RefreshOnActivate', type: PropertyType.Boolean },
    { name: 'PromotedActionCategoriesML', type: PropertyType.TextML },
    { name: 'SourceTable', type: PropertyType.Text },
    { name: 'SourceTableView', type: PropertyType.TableView },
    { name: 'InsertAllowed', type: PropertyType.Boolean },
    { name: 'ModifyAllowed', type: PropertyType.Boolean },
    { name: 'DeleteAllowed', type: PropertyType.Boolean },
    { name: 'DelayedInsert', type: PropertyType.Boolean },
    { name: 'ShowFilter', type: PropertyType.Boolean },
    { name: 'MultipleNewLines', type: PropertyType.Boolean },
    { name: 'SaveValues', type: PropertyType.Boolean },
    { name: 'AutoSplitKey', type: PropertyType.Boolean },
    { name: 'DataCaptionFields', type: PropertyType.FieldList },
    { name: 'ODataKeyFields', type: PropertyType.FieldList },
    { name: 'SourceTableTemporary', type: PropertyType.Boolean },
    { name: 'LinksAllowed', type: PropertyType.Boolean },
    { name: 'PopulateAllFields', type: PropertyType.Boolean },
    { name: 'APIPublisher', type: PropertyType.Text },
    { name: 'APIGroup', type: PropertyType.Text },
    { name: 'EntitySetName', type: PropertyType.Text },
    { name: 'EntityName', type: PropertyType.Text },
    { name: 'ChangeTrackingAllowed', type: PropertyType.Boolean },
    { name: 'ActionList', type: PropertyType.ActionList },

    { name: 'OnInit', type: PropertyType.Trigger },
    { name: 'OnOpenPage', type: PropertyType.Trigger },
    { name: 'OnClosePage', type: PropertyType.Trigger },
    { name: 'OnFindRecord', type: PropertyType.Trigger },
    { name: 'OnNextRecord', type: PropertyType.Trigger },
    { name: 'OnAfterGetRecord', type: PropertyType.Trigger },
    { name: 'OnNewRecord', type: PropertyType.Trigger },
    { name: 'OnInsertRecord', type: PropertyType.Trigger },
    { name: 'OnModifyRecord', type: PropertyType.Trigger },
    { name: 'OnDeleteRecord', type: PropertyType.Trigger },
    { name: 'OnQueryClosePage', type: PropertyType.Trigger },
    { name: 'OnAfterGetCurrRecord', type: PropertyType.Trigger },
  ];

  static pageControl: Array<IPropertyMap> = [
    { name: 'Name', type: PropertyType.Text },
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'Description', type: PropertyType.Text },
    { name: 'ContainerType', type: PropertyType.Option },
    { name: 'Visible', type: PropertyType.Text },
    { name: 'Enabled', type: PropertyType.Text },
    { name: 'Editable', type: PropertyType.Text },
    { name: 'ShowCaption', type: PropertyType.Boolean },
    { name: 'InstructionalTextML', type: PropertyType.TextML },
    { name: 'GroupType', type: PropertyType.Option },
    { name: 'Layout', type: PropertyType.Option },
    { name: 'IndentationColumnName', type: PropertyType.Text },
    { name: 'IndentationControls', type: PropertyType.Text },
    { name: 'FreezeColumnID', type: PropertyType.Text },
    { name: 'ShowAsTree', type: PropertyType.Boolean },
    { name: 'HideValue', type: PropertyType.Text },
    { name: 'MultiLine', type: PropertyType.Boolean },
    { name: 'ToolTipML', type: PropertyType.TextML },
    { name: 'OptionCaptionML', type: PropertyType.TextML },
    { name: 'DecimalPlaces', type: PropertyType.Text },
    { name: 'Width', type: PropertyType.Integer },
    { name: 'ShowMandatory', type: PropertyType.Text },
    { name: 'ODataEDMType', type: PropertyType.Text },
    { name: 'Title', type: PropertyType.Boolean },
    { name: 'MinValue', type: PropertyType.Text },
    { name: 'MaxValue', type: PropertyType.Text },
    { name: 'NotBlank', type: PropertyType.Boolean },
    { name: 'CharAllowed', type: PropertyType.Text },
    { name: 'ValuesAllowed', type: PropertyType.Text },
    { name: 'BlankNumbers', type: PropertyType.Option },
    { name: 'BlankZero', type: PropertyType.Boolean },
    { name: 'AutoFormatType', type: PropertyType.Text },
    { name: 'AutoFormatExpr', type: PropertyType.Text },
    { name: 'QuickEntry', type: PropertyType.Text },
    { name: 'AccessByPermission', type: PropertyType.Permission },
    { name: 'ApplicationArea', type: PropertyType.Text },
    { name: 'SourceExpr', type: PropertyType.Text },
    { name: 'TableRelation', type: PropertyType.TableRelation },
    { name: 'Importance', type: PropertyType.Option },
    { name: 'CaptionClass', type: PropertyType.Text },
    { name: 'DrillDownPageID', type: PropertyType.Text },
    { name: 'LookupPageID', type: PropertyType.Text },
    { name: 'Lookup', type: PropertyType.Boolean },
    { name: 'DrillDown', type: PropertyType.Boolean },
    { name: 'AssistEdit', type: PropertyType.Boolean },
    { name: 'ClosingDates', type: PropertyType.Boolean },
    { name: 'Numeric', type: PropertyType.Boolean },
    { name: 'RowSpan', type: PropertyType.Integer },
    { name: 'ColumnSpan', type: PropertyType.Integer },
    { name: 'DateFormula', type: PropertyType.Boolean },
    { name: 'ControlAddIn', type: PropertyType.Text },
    { name: 'Style', type: PropertyType.Option },
    { name: 'StyleExpr', type: PropertyType.Text },
    { name: 'ExtendedDatatype', type: PropertyType.Option },
    { name: 'Image', type: PropertyType.Text },
    { name: 'SubPageView', type: PropertyType.TableView },
    { name: 'SubPageLink', type: PropertyType.TableFilter },
    { name: 'ShowFilter', type: PropertyType.Boolean },
    { name: 'ProviderID', type: PropertyType.Text },
    { name: 'PartType', type: PropertyType.Option },
    { name: 'PagePartID', type: PropertyType.Text },
    { name: 'SystemPartID', type: PropertyType.Text },
    { name: 'ChartPartID', type: PropertyType.Text },
    { name: 'UpdatePropagation', type: PropertyType.Option },
    { name: 'EntitySetName', type: PropertyType.Option },
    { name: 'EntityName', type: PropertyType.Option },
    { name: 'ActionList', type: PropertyType.ActionList },

    { name: 'OnValidate', type: PropertyType.Trigger },
    { name: 'OnLookup', type: PropertyType.Trigger },
    { name: 'OnDrillDown', type: PropertyType.Trigger },
    { name: 'OnAssistEdit', type: PropertyType.Trigger },
    { name: 'OnControlAddIn', type: PropertyType.Trigger },
  ];

  static pageAction: Array<IPropertyMap> = [
    { name: 'Name', type: PropertyType.Text },
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'ToolTipML', type: PropertyType.TextML },
    { name: 'Description', type: PropertyType.Text },
    { name: 'Visible', type: PropertyType.Text },
    { name: 'Enabled', type: PropertyType.Text },
    { name: 'Image', type: PropertyType.Text },
    { name: 'RunPageMode', type: PropertyType.Option },
    { name: 'AccessByPermission', type: PropertyType.Permission },
    { name: 'ApplicationArea', type: PropertyType.Text },
    { name: 'Promoted', type: PropertyType.Boolean },
    { name: 'PromotedCategory', type: PropertyType.Boolean },
    { name: 'PromotedIsBig', type: PropertyType.Boolean },
    { name: 'PromotedOnly', type: PropertyType.Boolean },
    { name: 'Scope', type: PropertyType.Option },
    { name: 'Ellipsis', type: PropertyType.Boolean },
    { name: 'ShortCutKey', type: PropertyType.Text },
    { name: 'RunObject', type: PropertyType.Text },
    { name: 'RunPageView', type: PropertyType.TableView },
    { name: 'RunPageLink', type: PropertyType.TableFilter },
    { name: 'RunPageOnRec', type: PropertyType.Boolean },
    { name: 'InFooterBar', type: PropertyType.Boolean },
    { name: 'Gesture', type: PropertyType.Boolean },

    { name: 'OnAction', type: PropertyType.Trigger },
  ];

  static xmlPortProperties: Array<IPropertyMap> = [
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'Direction', type: PropertyType.Option },
    { name: 'DefaultFieldsValidation', type: PropertyType.Boolean },
    { name: 'Encoding', type: PropertyType.Option },
    { name: 'XMLVersionNo', type: PropertyType.Option },
    { name: 'Format/Evaluate', type: PropertyType.Option },
    { name: 'UseDefaultNamespace', type: PropertyType.Option },
    { name: 'DefaultNamespace', type: PropertyType.Boolean },
    { name: 'Namespaces', type: PropertyType.Text },
    { name: 'InlineSchema', type: PropertyType.Boolean },
    { name: 'UseLax', type: PropertyType.Boolean },
    { name: 'Format', type: PropertyType.Option },
    { name: 'FileName', type: PropertyType.Text },
    { name: 'UseRequestPage', type: PropertyType.Boolean },
    { name: 'TransactionType', type: PropertyType.Option },
    { name: 'Permissions', type: PropertyType.Permissions },
    { name: 'PreserveWhiteSpace', type: PropertyType.Boolean },
    { name: 'Evaluate', type: PropertyType.Option },
    { name: 'TextEncoding', type: PropertyType.Option },
    { name: 'FieldDelimiter', type: PropertyType.Text },
    { name: 'FieldSeparator', type: PropertyType.Text },
    { name: 'RecordSeparator', type: PropertyType.Text },
    { name: 'TableSeparator', type: PropertyType.Text },
    { name: 'Permissions', type: PropertyType.Permissions },
    { name: 'Unbound', type: PropertyType.Boolean },

    { name: 'OnInitXMLport', type: PropertyType.Trigger },
    { name: 'OnPreXMLport', type: PropertyType.Trigger },
    { name: 'OnPostXMLport', type: PropertyType.Trigger },
  ];

  static xmlPortElement: Array<IPropertyMap> = [
    { name: 'TextType', type: PropertyType.Option },
    { name: 'VariableName', type: PropertyType.Text },
    { name: 'Width', type: PropertyType.Integer },
    { name: 'NamespacePrefix', type: PropertyType.Text },
    { name: 'MinOccurs', type: PropertyType.Option },
    { name: 'MaxOccurs', type: PropertyType.Option },
    { name: 'SourceTable', type: PropertyType.Text },
    { name: 'SourceTableView', type: PropertyType.TableView },
    { name: 'ReqFilterHeadingML', type: PropertyType.TextML },
    { name: 'CalcFields', type: PropertyType.FieldList },
    { name: 'ReqFilterFields', type: PropertyType.FieldList },
    { name: 'LinkTable', type: PropertyType.Text },
    { name: 'LinkTableForceInsert', type: PropertyType.Boolean },
    { name: 'LinkFields', type: PropertyType.TableFilter },
    { name: 'Temporary', type: PropertyType.Boolean },
    { name: 'AutoSave', type: PropertyType.Boolean },
    { name: 'AutoUpdate', type: PropertyType.Boolean },
    { name: 'AutoReplace', type: PropertyType.Boolean },
    { name: 'SourceField', type: PropertyType.Text },
    { name: 'FieldValidate', type: PropertyType.Boolean },
    { name: 'AutoCalcField', type: PropertyType.Boolean },
    { name: 'Occurrence', type: PropertyType.Option },
    { name: 'DataType', type: PropertyType.Text },
    { name: 'Unbound', type: PropertyType.Boolean },

    { name: 'Export::OnBeforePassVariable', type: PropertyType.Trigger },
    { name: 'Import::OnAfterAssignVariable', type: PropertyType.Trigger },

    { name: 'Import::OnAfterAssignField', type: PropertyType.Trigger },
    { name: 'Export::OnBeforePassField', type: PropertyType.Trigger },

    { name: 'Import::OnAfterInsertRecord', type: PropertyType.Trigger },
    { name: 'Import::OnBeforeModifyRecord', type: PropertyType.Trigger },
    { name: 'Import::OnAfterModifyRecord', type: PropertyType.Trigger },
    { name: 'Export::OnPreXMLItem', type: PropertyType.Trigger },
    { name: 'Export::OnAfterGetRecord', type: PropertyType.Trigger },
    { name: 'Import::OnAfterInitRecord', type: PropertyType.Trigger },
    { name: 'Import::OnBeforeInsertRecord', type: PropertyType.Trigger },
  ];

  static queryProperties: Array<IPropertyMap> = [
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'Description', type: PropertyType.Text },
    { name: 'Permissions', type: PropertyType.Permissions },
    { name: 'OrderBy', type: PropertyType.OrderBy },
    { name: 'TopNumberOfRows', type: PropertyType.Integer },
    { name: 'ReadState', type: PropertyType.Option },
    { name: 'QueryType', type: PropertyType.Option },
    { name: 'QueryCategory', type: PropertyType.Text },
    { name: 'APIPublisher', type: PropertyType.Text },
    { name: 'APIGroup', type: PropertyType.Text },
    { name: 'APIVersion', type: PropertyType.Text },
    { name: 'EntityName', type: PropertyType.Text },
    { name: 'EntitySetName', type: PropertyType.Text },

    { name: 'OnBeforeOpen', type: PropertyType.Trigger },
  ];

  static queryElement: Array<IPropertyMap> = [
    { name: 'Description', type: PropertyType.Text },
    { name: 'DataItemTable', type: PropertyType.Text },
    { name: 'DataItemLink', type: PropertyType.DataItemLink },
    { name: 'DataItemLinkType', type: PropertyType.Option },
    { name: 'DataItemTableFilter', type: PropertyType.TableFilter },
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'DataSource', type: PropertyType.Text },
    { name: 'ColumnFilter', type: PropertyType.TableFilter },
    { name: 'MethodType', type: PropertyType.Option },
    { name: 'Method', type: PropertyType.Option },
    { name: 'ReverseSign', type: PropertyType.Boolean },
    { name: 'SQLJoinType', type: PropertyType.Option },
  ];

  static menuSuiteProperties: Array<IPropertyMap> = [];

  static menuNode: Array<IPropertyMap> = [
    { name: 'Name', type: PropertyType.Text },
    { name: 'CaptionML', type: PropertyType.TextML },
    { name: 'ParentNodeID', type: PropertyType.TextML },
    { name: 'Image', type: PropertyType.TextML },
    { name: 'IsShortcut', type: PropertyType.Boolean },
    { name: 'Visible', type: PropertyType.Boolean },
    { name: 'Enabled', type: PropertyType.Boolean },
    { name: 'NextNodeID', type: PropertyType.Text },
    { name: 'FirstChild', type: PropertyType.Text },
    { name: 'Deleted', type: PropertyType.Boolean },
    { name: 'RunObjectID', type: PropertyType.Text },
    { name: 'DepartmentCategory', type: PropertyType.Text },
  ];

  static codeunitProperties: Array<IPropertyMap> = [
    { name: 'Permissions', type: PropertyType.Permissions },
    { name: 'TableNo', type: PropertyType.Text },
    { name: 'SingleInstance', type: PropertyType.Boolean },
    { name: 'EventSubscriberInstance', type: PropertyType.Option },
    { name: 'Subtype', type: PropertyType.Option },
    { name: 'TestPermissions', type: PropertyType.Option },
    { name: 'TestIsolation', type: PropertyType.Option },

    { name: 'OnRun', type: PropertyType.Trigger },
  ];
}
